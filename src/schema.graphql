"Location for booking"
type Listing {
  id: ID!
  title: String!
  numOfBeds: Int!
  costPerNight: Float!
  description: String!
  "Indicates whether listing is closed for bookings (on hiatus)"
  closedForBookings: Boolean
  "Amenities available for this listing"
  amenities: [Amenity!]!
}

type Amenity {
  id: ID!
  category: String!
  name: String!
}

type Query {
  "A curated listing to feature on the homepage"
  featuredListings: [Listing!]!
  "Returns details about a listing"
  listing(id: ID!): Listing
}

type CreateListingResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human readable message for the UI"
  message: String!
  "Newly created listing"
  listing: Listing
}

input CreateListingInput {
  "The listing's title"
  title: String!

  description: String!
  numOfBeds: Int!
  costPerNight: Float!
  closedForBookings: Boolean
  "The listing's amenities"
  amenities: [ID!]!
}

type Mutation {
  "Creates a new listing"
  createListing(input: CreateListingInput!): CreateListingResponse!
}
